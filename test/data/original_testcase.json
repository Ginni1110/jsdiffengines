{"21": {"id": 128, "testcase": "var NISLFuzzingFunc = \nfunction (t, e) {\n    return this.filling = !0, this.fillColor = t || 0, this.fillAlpha = void 0 === e ? 1 : e, this.currentPath && this.currentPath.shape.points.length <= 2 && (this.currentPath.fill = this.filling, this.currentPath.fillColor = this.fillColor, this.currentPath.fillAlpha = this.fillAlpha), this;\n}\n;\nvar NISLParameter0 = false;\nvar NISLParameter1 = [true, [[\nfunction(done) {\n    var request = require('supertest');\n    request(this.app).post('/').set('Content-Type', 'application/x-www-form-urlencoded').send('user[name][first]=Tobi').expect(200, '{\"user[name][first]\":\"Tobi\"}', done);\n}\n, \nfunction(e, t, n) {\n    var o = {\n        filter: e('lodash/filter'),\n        map: e('lodash/map'),\n        find: e('lodash/find')\n    };\n    var i = e('create-react-class');\n    var a = e('react');\n    var s = e('dataframe');\n    if (!s(n))\n        return !1;\n    var r = typeof t;\n    return !!('number' == r ? a(n) && i(t, n.length) : 'string' == r && t in n) && o(n[t], e);\n}\n, function(value) {\n  // Acts as a simple wrapper\n  return parseInt(value);\n}, \nfunction() {\n    var convert = require('../lib');\n    var assert = require('assert');\n    assert.strictEqual(convert(1).from('VA').to('mVA'), 1000);\n}\n, \nfunction(tree = {}) {\n    const {inferImportTypes} = require('./patches');\n    let statics = {};\n    Object.values(tree.modules).forEach(mod => {\n        const localStatics = mod.ast.meta.AST_METADATA.statics;\n        Object.assign(statics, localStatics);\n    });\n    return statics;\n}\n, \nfunction(type, ...args) {\n    this._addColumnTypeFn(type).call(this, ...args);\n}\n, \nfunction(A) {\n    var n = e(725);\n    var I = e(828);\n    var a = e(826);\n    var s = e(238);\n    var c = e(827);\n    var r = e(739);\n    var t = A.as, e = A.className, i = A.sorted, o = r()(Object(c.C)(i, 'sorted'), e), M = Object(c.p)(s, A);\n    return a.a.createElement(I.a, n()({}, M, {\n        as: t,\n        className: o\n    }));\n}\n, function(e) {\n\tif (e.left)return this.maximum(e.left);\n\tvar t = e.parent;\n\twhile (t && e === t.left) {\n\t\te = t;\n\t\tt = t.parent\n\t}\n\treturn t\n}, \nfunction(e, n, s, l) {\n    var t;\n    var a = n(46);\n    var o = n(28);\n    var i;\n    var r = Object.create(null);\n    r(n);\n    var u = i(e), c = o(u), d = a(u.length), f = t ? d - 1 : 0, h = t ? -1 : 1;\n    if (s < 2)\n        for (;;) {\n            if (f in c) {\n                l = c[f], f += h;\n                break;\n            }\n            if (f += h, t ? f < 0 : d <= f)\n                throw TypeError('Reduce of empty array with no initial value');\n        }\n    for (; t ? f >= 0 : d > f; f += h)\n        f in c && (l = n(l, c[f], f, u));\n    return l;\n}\n], 5573.08279419418656297, 22.5807666135930584, 5.03709547525941781, undefined], [-64964465, 68, -3088738, 66939274, -446, -34, 7, 1, 223334587, 68082, 645031, -91978, -1, -64060103, -510, -99581], undefined, \nfunction(e, t, r) {\n    var n = e('@turf/meta');\n    void 0 === r && (r = {});\n    for (var a = 0, i = e; a < i.length; a++) {\n        var o = i[a];\n        if (o.length < 4)\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        for (var l = 0; l < o[o.length - 1].length; l++)\n            if (o[o.length - 1][l] !== o[0][l])\n                throw new Error('First and last Position are not equivalent.');\n    }\n    return n({\n        type: 'Polygon',\n        coordinates: e\n    }, t, r);\n}\n, -412454721.3560948126952319, [[function() {\n    return 'Coast';\n}\n, -647189299.002399095867717027], \"M@;+8Lif#XP*,Ny_=dDq4F+6Y)U_sX@5%`@0beQj3~1vf|a)Xu,{}$f1aD|({1^mwjja2{q};)lKOw*'5Y&'~W?Xn5gG$uG?ayq3{0\", [undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined], function(x) {\n  return (x < 0) ? Math.ceil(x) : Math.floor(x);\n}, \"(D#.gV_Q.]jC5^ .D(GWN\\\"~lR-4?H1`~IeYv`k7mN/odq#4!XV\\\"Z`l~4gFfl#5cpZtas`8^fubwX''Zu1Npmx~rjwVOmqU $u/%pJ LQ*k1S*xDa=|ax yt7hRJ~HJ\"], 35283135.7852771986356654, 594.3497853278069769];\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0, NISLParameter1);\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLParameter1 = [[[function () {\n                const {} = require();\n            }]]];", "auto_simplified_duration_ms": 10404, "original_testcase_id": 21}, "25": {"id": 154, "testcase": "var NISLFuzzingFunc = function (e, t) {\n    'use strict';\n    for (var INDEX = 0; INDEX < 1000; INDEX++) {\n        function r(n, o, a) {\n        }\n    }\n    return r;\n};\nvar NISLParameter0 = function () {\n};\nvar NISLParameter1 = function (linter) {\n};\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0, NISLParameter1);\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLFuzzingFunc = function () {\n    'use strict';\n    for (var INDEX = 0; INDEX < 1000; INDEX++) {\n        function r() {\n        }\n    }\n    return r;\n};\nvar NISLCallingResult = NISLFuzzingFunc();", "auto_simplified_duration_ms": 4278, "original_testcase_id": 25}, "56": {"id": 322, "testcase": "var NISLFuzzingFunc = \nfunction (t) {\n    return (t + '').toUpperCase();\n}\n;\nvar NISLParameter0 = 410597.5940638326228507;\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0);\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLFuzzingFunc = function (t) {\n    return (t + '').toUpperCase();\n};\nvar NISLParameter0 = 410597.5940638326;\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0);\nprint(NISLCallingResult);", "auto_simplified_duration_ms": 2822, "original_testcase_id": 56}, "87": {"id": 500, "testcase": "var NISLFuzzingFunc = \nfunction (t) {\n    var i = t.x - this.x, e = t.y - this.y, n = t.z - this.z || 0;\n    return Math.sqrt(i * i + e * e + n * n);\n}\n;\nvar NISLParameter0 = \nfunction() {\n    let test = { test: () => (1, 3 + this.test) };\n    {\n        let test = { test: ({a}, ...rest) => (1, a + rest[0] + this.test) };\n        console.log(test.test({ a: 3 }, 2, 999) === 105);\n    }\n}\n;\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0);\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLParameter0 = function () {\n    let test = {};\n};", "auto_simplified_duration_ms": 2522, "original_testcase_id": 87}, "139": {"id": 842, "testcase": "var NISLFuzzingFunc = function (r) {\n    var __extends = this && this.__extends || function () {\n        var r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, e) {\n            t.__proto__ = e;\n        } || function (t, e) {\n            for (var a in e)\n                if (e.hasOwnProperty(a))\n                    t[a] = e[a];\n        };\n        return function (t, e) {\n            r(t, e);\n            function a() {\n                this.constructor = t;\n            }\n            t.prototype = e === null ? Object.create(e) : (a.prototype = e.prototype, new a());\n        };\n    }();\n    __extends(t, r);\n    for (var INDEX = 0; INDEX < 1000; INDEX++) {\n        function t() {\n        }\n    }\n    t.toString = function () {\n    };\n    t.prototype._onUpdateFrame = function () {\n    };\n    t.prototype.init = function (t, e, a) {\n    };\n    return t;\n};\nvar NISLParameter0 = function (th, line) {\n};\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0);\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLFuzzingFunc = function (r) {\n    var __extends = this && this.__extends || function () {\n        var r = Object.setPrototypeOf || {} instanceof Array && function () {\n        } || function () {\n        };\n        return function (t, e) {\n            r(t, e);\n        };\n    }();\n    __extends(t, r);\n    for (var INDEX = 0; INDEX < 1000; INDEX++) {\n        function t() {\n        }\n    }\n};\nvar NISLParameter0 = function () {\n};\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0);", "auto_simplified_duration_ms": 10465, "original_testcase_id": 139}, "147": {"id": 884, "testcase": "var NISLFuzzingFunc = \nfunction (mat3) {\n    if (mat3 && mat3.mat) {\n        this.mat = new Float32Array(mat3.mat);\n    } else {\n        this.mat = new Float32Array(9);\n    }\n}\n;\nvar NISLParameter0 = true;\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0);\nprint(NISLCallingResult);", "auto_simplified_testcase": null, "auto_simplified_duration_ms": 0, "original_testcase_id": 147}, "149": {"id": 890, "testcase": "var NISLFuzzingFunc = function (e) {\n    return ('00' + e.toString(16)).slice(-2);\n};\nfor (var INDEX = 0; INDEX < 1000; INDEX++) {\n    var NISLParameter0 = function (t) {\n    };\n}\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0);\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLFuzzingFunc = function (e) {\n    return ('00' + e.toString()).slice(-2);\n};\nfor (var INDEX = 0; INDEX < 1000; INDEX++) {\n    var NISLParameter0 = function () {\n    };\n}\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0);\nprint(NISLCallingResult);", "auto_simplified_duration_ms": 4195, "original_testcase_id": 149}, "185": {"id": 1156, "testcase": "var NISLFuzzingFunc = \nfunction (a) {\n    var b = function (b, c) {\n        return c == null ? !0 : a(b, c);\n    };\n    return b.getMessage = function () {\n        return ' is optional, or it' + a.getMessage();\n    }, b;\n}\n;\nvar NISLParameter0 = \nfunction(db, next) {\n    const {getModelSafely} = require('@commons/util/mongoose-utils');\n    next();\n}\n;\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0);\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLParameter0 = function () {\n    const {} = require();\n};", "auto_simplified_duration_ms": 2985, "original_testcase_id": 185}, "200": {"id": 1266, "testcase": "var NISLFuzzingFunc = \nfunction (id) {\n    const events = [];\n    let testId;\n    if (testId === id) {\n        events.push({\n            type: 'destroy',\n            id\n        });\n    }\n}\n;\nvar NISLParameter0 = undefined;\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0);\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLFuzzingFunc = function () {\n    let testId;\n};", "auto_simplified_duration_ms": 2888, "original_testcase_id": 200}, "204": {"id": 1293, "testcase": "var NISLFuzzingFunc = function (t, e, n) {\n    'use strict';\n    function r(t) {\n        return t && t.__esModule ? t : { 'default': t };\n    }\n    for (var INDEX = 0; INDEX < 1000; INDEX++) {\n        Object.defineProperty(e, '__esModule', { value: !0 });\n    }\n    var i = n(7), o = r(i), a = n(8), s = r(a), c = function (t, e, n) {\n        }, u = function (t, e) {\n        }, f = function (t, e) {\n        };\n    e['default'] = {\n        create: c,\n        destroy: u,\n        verify: f\n    };\n};\nvar NISLParameter0 = false;\nvar NISLParameter1 = [\n    6686177314,\n    -2364499613,\n    5962298,\n    -1,\n    -8,\n    5284\n];\nvar NISLParameter2 = function () {\n    return [\n        this.northwestChild,\n        this.northeastChild,\n        this.southwestChild,\n        this.southeastChild\n    ];\n};\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0, NISLParameter1, NISLParameter2);\nprint(NISLCallingResult);", "auto_simplified_testcase": null, "auto_simplified_duration_ms": 0, "original_testcase_id": 204}, "278": {"id": 1783, "testcase": "var NISLFuzzingFunc = \nasync function () {\n    var path = require('path');\n    var db = require('./database');\n    var Upgrade = module.exports;\n    const files = await Upgrade.getAll();\n    const executed = await db.getSortedSetRange('schemaLog', 0, -1);\n    const remainder = files.filter(name => !executed.includes(path.basename(name, '.js')));\n    if (remainder.length > 0) {\n        throw new Error('schema-out-of-date');\n    }\n}\n;\nvar NISLCallingResult = NISLFuzzingFunc();\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLFuzzingFunc = async function () {\n    var path = require();\n};\nvar NISLCallingResult = NISLFuzzingFunc();", "auto_simplified_duration_ms": 3686, "original_testcase_id": 278}, "288": {"id": 1851, "testcase": "var NISLFuzzingFunc = \nfunction () {\n    var t;\n    try {\n        var t = new ArrayBuffer(0), e = new Uint8Array(t);\n        return e.foo = function () {\n            return 42;\n        }, 42 === e.foo() && 'function' == typeof e.subarray;\n    } catch (t) {\n        return !1;\n    }\n}\n;\nvar NISLCallingResult = NISLFuzzingFunc();\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLFuzzingFunc = function () {\n    try {\n        var t = new ArrayBuffer();\n    } catch (t) {\n        return !1;\n    }\n};\nvar NISLCallingResult = NISLFuzzingFunc();\nprint(NISLCallingResult);", "auto_simplified_duration_ms": 4065, "original_testcase_id": 288}, "355": {"id": 2259, "testcase": "var NISLFuzzingFunc = \nfunction () {\n    var t = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, e) {\n        t.__proto__ = e;\n    } || function (t, e) {\n        for (var a in e)\n            if (e.hasOwnProperty(a))\n                t[a] = e[a];\n    };\n    var e = t !== null && t.apply(this, arguments) || this;\n    e.actions = [];\n    return e;\n}\n;\nvar NISLCallingResult = NISLFuzzingFunc();\nprint(NISLCallingResult);", "auto_simplified_testcase": null, "auto_simplified_duration_ms": 0, "original_testcase_id": 355}, "378": {"id": 2423, "testcase": "var NISLFuzzingFunc = function (t) {\n    for (var e = [], i = 0; i < 360; i++) {\n        var o = i * Math.PI / 180, r = 0 + t * Math.cos(o), n = 0 + t * Math.sin(o);\n        for (var INDEX = 0; INDEX < 1000; INDEX++) {\n            e.push({\n                x: r,\n                y: n\n            });\n        }\n    }\n    return [e];\n};\nvar NISLParameter0 = [\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null\n];\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0);\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLFuzzingFunc = function (t) {\n    for (var e = [], i = 0; i < 360; i++) {\n        for (var INDEX = 0; INDEX < 1000; INDEX++) {\n            e.push({});\n        }\n    }\n};\nvar NISLCallingResult = NISLFuzzingFunc();", "auto_simplified_duration_ms": 18825, "original_testcase_id": 378}, "390": {"id": 2497, "testcase": "var NISLFuzzingFunc = \nfunction (t, e, n) {\n    'use strict';\n    var r = '<[A-Za-z][A-Za-z0-9\\\\-]*(?:\\\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\\\s*=\\\\s*(?:[^\"\\'=<>`\\\\u0000-\\\\u0020]+|\\'[^\\']*\\'|\"[^\"]*\"))?)*\\\\s*\\\\/?>', i = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\n    n.openCloseTag = new RegExp('^(?:' + r + '|' + i + ')'), n.tag = new RegExp('^(?:' + r + '|' + i + '|<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->|<[?].*?[?]>|<![A-Za-z]+\\\\s+[^>]*>|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>)');\n}\n;\nvar NISLParameter0 = -92369;\nvar NISLParameter1 = \"`[SW)mbglL$[rUh74b&Jt`C5)QZAGuO2%M wtfk`UV`BDcpntPSoS(KR\\\\Jz0g_I\\\\u<&\\\\1]k<o\";\nvar NISLParameter2 = \nfunction(t, e) {\n    var n = t('@turf/meta');\n    t = t || {};\n    n(e = e || {});\n    var r = {\n        valType: 'string',\n        dflt: '',\n        editType: t.editType || 'none'\n    };\n    return !1 !== t.arrayOk && (r.arrayOk = !0), r;\n}\n;\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0, NISLParameter1, NISLParameter2);\nprint(NISLCallingResult);", "auto_simplified_testcase": null, "auto_simplified_duration_ms": 0, "original_testcase_id": 390}, "415": {"id": 2667, "testcase": "var NISLFuzzingFunc = \nfunction (b) {\n    return new Uint8Array(b).buffer;\n}\n;\nvar NISLParameter0 = [\nfunction(e, f, n, o, d, i, t, l) {\n    var cf = new l();\n    var yf = new l();\n    var sf = new l();\n    var pf = new l();\n    var u = pf, p = sf;\n    p.set(0, 0, 1), d.vmult(p, p);\n    for (var s = 0, y = yf, c = 0; c !== f.vertices.length; c++) {\n        u.copy(f.vertices[c]), i.vmult(u, u), o.vadd(u, u), u.vsub(n, y);\n        var a = p.dot(y);\n        if (0 >= a) {\n            var r = this.createContactEquation(t, l, e, f), w = cf;\n            p.mult(p.dot(y), w), u.vsub(w, w), w.vsub(n, r.ri), r.ni.copy(p), u.vsub(o, r.rj), r.ri.vadd(n, r.ri), r.ri.vsub(t.position, r.ri), r.rj.vadd(o, r.rj), r.rj.vsub(l.position, r.rj), this.result.push(r), s++, this.enableFrictionReduction || this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n    }\n    this.enableFrictionReduction && s && this.createFrictionFromAverage(s);\n}\n, -9257, null, 5262, undefined, \nfunction(a, b, c, d) {\n    var e = function(a, b, c, e) {\n        this.id = d++, void 0 == e && (e = !0), this.points = [\n            a,\n            b,\n            c\n        ], e && (a.registerFace(this), b.registerFace(this), c.registerFace(this));\n    };\n    e.Geometry.call(this), this.radius = a = a || 50, this.segments = b = void 0 !== b ? Math.max(3, b) : 8, this.thetaStart = c = void 0 !== c ? c : 0, this.thetaLength = d = void 0 !== d ? d : 2 * Math.PI;\n    var f, g = [], h = new e.Vector3(), i = new e.Vector2(0.5, 0.5);\n    for (this.vertices.push(h), g.push(i), f = 0; b >= f; f++) {\n        var j = new e.Vector3(), k = c + f / b * d;\n        j.x = a * Math.cos(k), j.y = a * Math.sin(k), this.vertices.push(j), g.push(new e.Vector2((j.x / a + 1) / 2, (j.y / a + 1) / 2));\n    }\n    var l = new e.Vector3(0, 0, 1);\n    for (f = 1; b >= f; f++) {\n        var m = f, n = f + 1, o = 0;\n        this.faces.push(new e.Face3(m, n, o, [\n            l.clone(),\n            l.clone(),\n            l.clone()\n        ])), this.faceVertexUvs[0].push([\n            g[f].clone(),\n            g[f + 1].clone(),\n            i.clone()\n        ]);\n    }\n    this.computeCentroids(), this.computeFaceNormals(), this.boundingSphere = new e.Sphere(new e.Vector3(), a);\n}\n, \nfunction(a, b) {\n    delete a.da[b];\n}\n, \"f*Aq]]'\\\\|N#tL-w#/NCUU\\\"7p[a(gIh+xt\"];\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0);\nprint(NISLCallingResult);", "auto_simplified_testcase": null, "auto_simplified_duration_ms": 0, "original_testcase_id": 415}, "428": {"id": 2749, "testcase": "var NISLFuzzingFunc = \nfunction (t, e, r) {\n    return t[0] = e, t[1] = r, t;\n}\n;\nvar NISLParameter0 = [-484587.6166625083826616, -96237472.2329626099225829, -75077.15587952806547634, -44141.036730881415565464, 60967.27825770465088917, 447844421.8605366468664796, 26.17828789088628816];\nvar NISLParameter1 = undefined;\nvar NISLParameter2 = [-1.5284129357095653, -56570610.7779067447423876, 715.9190230256294999, 0.2014166042717932, 6709281961.6543629619434668];\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0, NISLParameter1, NISLParameter2);\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLFuzzingFunc = function (t, e, r) {\n    return t;\n};\nvar NISLParameter0 = [\n    -484587.6166625084,\n    -96237472.23296261,\n    447844421.86053663\n];\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0);\nprint(NISLCallingResult);", "auto_simplified_duration_ms": 8254, "original_testcase_id": 428}, "429": {"id": 2759, "testcase": "var NISLFuzzingFunc = \nfunction (e, r, i, n) {\n    var t = Object.freeze;\n    this.red = t(e, 1), this.green = t(r, 1), this.blue = t(i, 1), this.alpha = t(n, 1);\n}\n;\nvar NISLParameter0 = null;\nvar NISLParameter1 = null;\nvar NISLParameter2 = \"{Kdp:)\";\nvar NISLParameter3 = \nfunction(b) {\n    var g;\n    var a = arguments;\n    return this.each(function() {\n        var c = a(this), d = c.data('bs.dropdown');\n        d || c.data('bs.dropdown', d = new g(this)), 'string' == typeof b && d[b].call(c);\n    });\n}\n;\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0, NISLParameter1, NISLParameter2, NISLParameter3);\nprint(NISLCallingResult);", "auto_simplified_testcase": null, "auto_simplified_duration_ms": 0, "original_testcase_id": 429}, "431": {"id": 2777, "testcase": "var NISLFuzzingFunc = \nasync function (e, t, r) {\n    var m = 0;\n    var h = 0;\n    var n;\n    const i = {\n        modulus: new n.default(t),\n        publicExponent: new n.default(r)\n    };\n    let a;\n    if (void 0 !== h.createPrivateKey) {\n        a = {\n            key: m.encode(i, 'der'),\n            format: 'der',\n            type: 'pkcs1',\n            padding: h.constants.RSA_PKCS1_PADDING\n        };\n    } else {\n        a = {\n            key: m.encode(i, 'pem', { label: 'RSA PUBLIC KEY' }),\n            padding: h.constants.RSA_PKCS1_PADDING\n        };\n    }\n    return new Uint8Array(h.publicEncrypt(a, e));\n}\n;\nvar NISLParameter0 = \nfunction(e) {\n    this.abctune = e, this.setVerticalSpace(e.formatting), this.measureNumber = null, this.noteNumber = null, this.setPrintMode('print' === e.media), this.setPadding(e);\n}\n;\nvar NISLParameter1 = \nfunction(t) {\n    this.m_restitution = t;\n}\n;\nvar NISLParameter2 = null;\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0, NISLParameter1, NISLParameter2);\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLFuzzingFunc = async function () {\n    const i = { modulus: new n.default() };\n};\nvar NISLCallingResult = NISLFuzzingFunc();", "auto_simplified_duration_ms": 6112, "original_testcase_id": 431}, "450": {"id": 2914, "testcase": "var NISLFuzzingFunc = function (t, e) {\n    for (var INDEX = 0; INDEX < 1000; INDEX++) {\n        function n() {\n        }\n    }\n    n.prototype = t;\n    var r = new n();\n    return r.constructor = e, r;\n};\nvar NISLParameter0 = 5713786893;\nvar NISLParameter1 = [\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null\n];\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0, NISLParameter1);\nprint(NISLCallingResult);", "auto_simplified_testcase": "var NISLFuzzingFunc = function (t, e) {\n    for (var INDEX = 0; INDEX < 1000; INDEX++) {\n        function n() {\n        }\n    }\n    n.prototype = t;\n};\nvar NISLCallingResult = NISLFuzzingFunc();", "auto_simplified_duration_ms": 5149, "original_testcase_id": 450}, "471": {"id": 3059, "testcase": "var NISLFuzzingFunc = function (n, e, r) {\n    'use strict';\n    e.exports = function (e) {\n    };\n};\nfor (var INDEX = 0; INDEX < 1000; INDEX++) {\n    var NISLParameter0 = function (i, v) {\n    };\n}\nvar NISLParameter1 = false;\nvar NISLParameter2 = -1957570.8436281807;\nvar NISLCallingResult = NISLFuzzingFunc(NISLParameter0, NISLParameter1, NISLParameter2);\nprint(NISLCallingResult);", "auto_simplified_testcase": null, "auto_simplified_duration_ms": 0, "original_testcase_id": 471}}